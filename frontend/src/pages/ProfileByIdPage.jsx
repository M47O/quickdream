import { useEffect, useState } from 'react'
import { useParams } from 'react-router-dom'
import PostForm from '../components/PostForm'
import PreviewPostDialog from '../components/PreviewPostDialog'
import SelectedPostDialog from '../components/SelectedPostDialog'
import { IconButton } from '@mui/material';
import AddIcon from '@mui/icons-material/Add';
import './css/ProfilePage.css'

export default function ProfilePage({ user }) {
    const [showPreview, setShowPreview] = useState(false)
    const [showSelctedPost, setShowSelectedPost] = useState(false)
    const [showForm, setShowForm] = useState(false)
    const [post, setPost] = useState(null)
    const [profilePosts, setProfilePosts] = useState([])
    const [selectedPost, setSelectedPost] = useState(null)

    const params = useParams()
    console.log(params)

    const handleCreatePost = (newPost) => {
        setPost(newPost)
        setShowPreview(true)
    }

    // async function fetchUserInfo() {
    //     const response = await fetch(`http://localhost:4000/user/${}`)
    // }

    async function fetchPosts() {
        try {
            const response = await fetch(`http://localhost:4000/post/user/${user.id}`, { credentials: "include" });
            const profilePostsData = await response.json();
            setProfilePosts(profilePostsData)
        } catch (err) {
            console.error(err);
        }
    }

    useEffect(() => {
        fetchPosts();
    }, [user]);

    console.log(profilePosts)

    return (
        !user ? <p style={{ textAlign: "center" }}>Please log in to access your profile page.</p> : (
            <div className="profile">
                {showForm &&
                    <PostForm
                        user={user}
                        onCreatePost={handleCreatePost}
                        showForm={showForm}
                        close={() => {
                            setShowForm(false)
                        }}
                    />}

                <PreviewPostDialog
                    isOpen={showPreview}
                    post={post}
                    updatePosts={fetchPosts}
                    close={() => {
                        setShowPreview(false)
                        setPost(null)
                        setShowForm(false)
                    }}
                />
                <section className="profilePosts">
                    <div className="profilePosts__iconContainer">
                        <IconButton
                            size="large"
                            onClick={() => setShowForm(true)}
                        >
                            <AddIcon sx={{ color: 'inherit' }} />
                        </IconButton>
                    </div>

                    <h2 className="profilePosts__heading">My Posts</h2>
                    {profilePosts.length > 0 ? (

                        <div className="postGrid">
                            {profilePosts.map(post => (
                                <div key={post._id}
                                    className="postGrid__imageContainer"
                                    onClick={() => {
                                        setSelectedPost(post)
                                        setShowSelectedPost(true)
                                        console.log(selectedPost)
                                    }}
                                >

                                    <img
                                        className="postGrid__image"
                                        src={post.image}
                                        alt={`Image generated by AI with the prompt ${post.prompt}`}
                                    />
                                    <div className="postGrid__titleContainer">
                                        <p className="postGrid__imageTitle">{post.title.length > 26 ? post.title.slice(0, 20) + "..." : post.title}</p>
                                    </div>
                                </div>
                            ))}
                        </div>
                    ) :
                        <p className="profilePosts__noPostMessage">You don't have any posts! <br />Click the <b>plus</b> in the top left to generate your first image! </p>
                    }

                    <SelectedPostDialog
                        close={() => setShowSelectedPost(false)}
                        post={selectedPost}
                        isOpen={showSelctedPost}
                        author={user}
                        user={user}
                    />
                </section >

            </div >

        )
    )
}